#!/bin/bash

CDS_processing_autop_version=3.0.0
CDS_processing_seda_docker_version=1.6.1
CDS_processing_seda_program_version=1.6.1
seda_ref="Lopez-Fernandez, H., Duque, P., Vazquez, N., Fdez-Riverola, F., Reboiro-Jato, M., Vieira, C. P., & Vieira, J. (2022)"
seda_doi="10.1109/TCBB.2020.3040383"

. /data/config

input_dir=$1
out_dir=$2
prefix=$3

if [ "$CDS_processing_seda_docker_c_version" != "" ]; then
	CDS_processing_autop_version="?"
	CDS_processing_seda_docker_version=$CDS_processing_seda_docker_c_version
	CDS_processing_seda_program_version="?"
	seda_ref="?"
	seda_doi="?"
fi

start=$(echo "docker run --rm  -v $dir:/data pegi3s/seda:$CDS_processing_seda_docker_version /opt/SEDA/run-cli.sh")

if [[ "$CDS_processing_reformat_headers" == "y" ]]; then
	echo "Reformatting the sequence headers"
    mkdir -p /data/$prefix"1-Reformatted_headers"
	$start rename-header-multipart -id /data/$input_dir -od /data/$prefix"1-Reformatted_headers" -ht "all" -fd " " -fm keep -f 1 > /dev/null 2>&1
	$start rename-header-replace-word -id /data/$prefix"1-Reformatted_headers" -od /data/$prefix"1-Reformatted_headers" -ht "all" -tw "_[0-9]+$" -r -rp "" > /dev/null 2>&1
	$start rename-header-replace-word -id /data/$prefix"1-Reformatted_headers" -od /data/$prefix"1-Reformatted_headers" -ht "all" -tw "lcl\|" -r -rp "" > /dev/null 2>&1
	$start rename-header-replace-word -id /data/$prefix"1-Reformatted_headers" -od /data/$prefix"1-Reformatted_headers" -ht "all" -tw "_cds_" -r -rp "_" > /dev/null 2>&1
	$start rename-header-replace-word -id /data/$prefix"1-Reformatted_headers" -od /data/$prefix"1-Reformatted_headers" -ht "all" -tw "\." -r -rp "_" > /dev/null 2>&1
	$start rename-header-replace-word -id /data/$prefix"1-Reformatted_headers" -od /data/$prefix"1-Reformatted_headers" -ht "all" -tw "__" -r -rp "_" > /dev/null 2>&1
else
	echo "Keeping the sequence headers"
	mkdir -p /data/$prefix"1-Headers_not_reformatted"
	cp /data/$input_dir/* /data/$prefix"1-Headers_not_reformatted"
fi	

echo "Removing sequences with ambiguous nucleotides"
if [[ "$CDS_processing_reformat_headers" == "y" ]]; then
	mkdir -p /data/$prefix"2-Remove_ambiguous_nucleotides"
	$start pattern-filtering -id /data/$prefix"1-Reformatted_headers" -od /data/$prefix"2-Remove_ambiguous_nucleotides" -wop [NVHDBMKWSYR] > /dev/null 2>&1
else
    mkdir -p /data/$prefix"2-Remove_ambiguous_nucleotides"
	$start pattern-filtering -id /data/$prefix"1-Headers_not_reformatted" -od /data/$prefix"2-Remove_ambiguous_nucleotides" -wop [NVHDBMKWSYR] > /dev/null 2>&1
fi

echo "Keep sequences with start codons, without in frame stop codons, and that are multiple of 3"
mkdir -p /data/$prefix"3-Start_and_multiple_of_3"
start_codon_1=$(echo $start_codon | sed "s/ / \-sc /g")	
$start filtering -id /data/$prefix"2-Remove_ambiguous_nucleotides" -od /data/$prefix"3-Start_and_multiple_of_3" -sc $CDS_processing_start_codon -rnm3 -rwifsc > /dev/null 2>&1
echo "Removing stop codons"
mkdir -p /data/$prefix"4-Remove_stop_codons"
$start remove-stop-codons -id /data/$prefix"3-Start_and_multiple_of_3" -od /data/$prefix"4-Remove_stop_codons" -rlb -lb unix > /dev/null
echo "Removing sequences by size difference"
mkdir -p /data/$prefix"5-Size_difference"	
$start filtering -id /data/$prefix"4-Remove_stop_codons" -od /data/$prefix"5-Size_difference" -rsd -maxsd $CDS_processing_max_size_difference -rsf /data/$CDS_processing_reference_file > /dev/null 2>&1
echo "Searching for the typical amino acid pattern"
mkdir -p /data/$prefix"6-Search_pattern"
$start pattern-filtering -id /data/$prefix"5-Size_difference" -od /data/$prefix"6-Search_pattern" -wp $CDS_processing_pattern -caa -f 1 -ct $CDS_processing_codon_table > /dev/null 2>&1
echo "Removing Isoforms"
mkdir -p /data/$prefix"7-Remove_isoforms" /data/$prefix"8-Removed_isoforms"
$start remove-isoforms -id /data/$prefix"6-Search_pattern" -od /data/$prefix"7-Remove_isoforms/" -mwl $CDS_processing_isoform_min_word_length --reference-size $CDS_processing_isoform_ref_size -tbm longest -ifd /data/$prefix"8-Removed_isoforms" > /dev/null 2>&1
mkdir -p /data/$out_dir
cp /data/$prefix"7-Remove_isoforms"/* /data/$out_dir > /dev/null 2>&1

versions_file="/data/files_to_keep/versions.csv"

if ! grep -qE "^\s*CDS_processing" "$versions_file"; then
    echo "CDS_processing $CDS_processing_autop_version,pegi3s/seda:$CDS_processing_seda_docker_version,SEDA $CDS_processing_seda_program_version,\"$seda_ref\",\"$seda_doi\"" >> "$versions_file"
fi

echo -e "seda_ref=\"$seda_ref\"\nseda_doi=\"$seda_doi\"" >> /data/$project/intermediate_files/refs/tmp_references


